version: "3.7"
services:
  
  database_application:
    image: postgres
    container_name: database_application
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data   
    tty: true
    ports:
      - "35000:5432" 
    env_file:
      - .env
  
  api:
    container_name: api_dockerized
    build: 
      context: .
    restart: always
    env_file:
      - .env
    depends_on:
      - database_application
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
      - 127.0.0.1:9223:9223
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    command: npm run start:dev

  migration:
    build:
      context: .
    command:
      [
        "./wait-for-it/wait-for-it.sh",
        "database_application:5432",
        "--",
        "npm",
        "run",
        "migrate"
      ]
    links:
      - database_application
    depends_on:
      - database_application
    env_file: .env
    environment:
      - DB_HOST=${DB_HOST}
    
volumes:
  pg_data: null